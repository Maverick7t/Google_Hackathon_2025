This file is a merged representation of a subset of the codebase, containing specifically included files, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of a subset of the repository's contents that is considered the most important context.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Only files matching these patterns are included: frontend
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
frontend/.gitignore
frontend/eslint.config.js
frontend/index.html
frontend/package.json
frontend/public/vite.svg
frontend/README.md
frontend/src/App.css
frontend/src/App.jsx
frontend/src/assets/react.svg
frontend/src/index.css
frontend/src/interface.jsx
frontend/src/main.jsx
frontend/vite.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="frontend/.gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="frontend/eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])
</file>

<file path="frontend/index.html">
<!doctype html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <link rel="icon" type="image/svg+xml" href="/vite.svg" />
  <meta name="viewport"
    content="width=device-width, initial-scale=1.0, maximum-scale=5.0, user-scalable=yes, viewport-fit=cover" />
  <meta name="theme-color" content="#0f172a" />
  <meta name="mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-capable" content="yes" />
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
  <title>DevInsight - AI GitHub Analytics</title>
</head>

<body>
  <div id="root"></div>
  <script type="module" src="/src/main.jsx"></script>
</body>

</html>
</file>

<file path="frontend/package.json">
{
  "name": "frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "@tailwindcss/vite": "^4.1.14",
    "lucide-react": "^0.546.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "recharts": "^3.3.0",
    "tailwindcss": "^4.1.14"
  },
  "devDependencies": {
    "@eslint/js": "^9.36.0",
    "@types/react": "^19.1.16",
    "@types/react-dom": "^19.1.9",
    "@vitejs/plugin-react": "^5.0.4",
    "eslint": "^9.36.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.22",
    "globals": "^16.4.0",
    "vite": "^7.1.7"
  }
}
</file>

<file path="frontend/public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="frontend/README.md">
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) (or [oxc](https://oxc.rs) when used in [rolldown-vite](https://vite.dev/guide/rolldown)) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## React Compiler

The React Compiler is not enabled on this template because of its impact on dev & build performances. To add it, see [this documentation](https://react.dev/learn/react-compiler/installation).

## Expanding the ESLint configuration

If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
</file>

<file path="frontend/src/App.css">
/* App.css - Full screen layout */
#root {
  width: 100vw;
  height: 100vh;
  margin: 0;
  padding: 0;
  overflow: hidden;
}
</file>

<file path="frontend/src/App.jsx">
import DevInsight from './interface';
import './App.css';

function App() {
  return <DevInsight />;
}

export default App;
</file>

<file path="frontend/src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="frontend/src/index.css">
@import "tailwindcss";

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  height: 100vh;
  width: 100vw;
  margin: 0;
  padding: 0;
  overflow: hidden;
  position: fixed;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#root {
  height: 100%;
  width: 100%;
  overflow: hidden;
}
</file>

<file path="frontend/src/interface.jsx">
import React, { useState } from 'react';
import { Send, BarChart3, MessageSquare, TrendingUp, AlertCircle, Clock } from 'lucide-react';
import { BarChart, Bar, PieChart, Pie, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line } from 'recharts';

const DevInsight = () => {
    const [activeTab, setActiveTab] = useState('chat');
    const [messages, setMessages] = useState([
        { id: 1, type: 'ai', text: "Hello! I'm your AI Analyst for GitHub. Ask me anything about your team's code." },
    ]);
    const [input, setInput] = useState('');
    const [loading, setLoading] = useState(false);

    // Mock data for reports
    const contributorData = [
        { name: 'alex-j', commits: 145 },
        { name: 'sara-l', commits: 128 },
        { name: 'mike-c', commits: 112 },
        { name: 'jenna-k', commits: 89 },
        { name: 'david-p', commits: 76 },
    ];

    const issueStats = [
        { name: 'Closed', value: 75, fill: '#06B6D4' },
        { name: 'Open', value: 25, fill: '#0EA5E9' },
    ];

    const recentIssues = [
        { id: 1, title: 'Fix: API pagination bug', state: 'OPEN', repo: 'payment-svc' },
        { id: 2, title: 'Feat: User profile redesign', state: 'CLOSED', repo: 'frontend-app' },
        { id: 3, title: 'Docs: Update README', state: 'OPEN', repo: 'docs-infra' },
    ];

    const blockers = [
        { id: 1, label: '[BUG]', title: 'Critical data loss on save', tag: 'user-db' },
        { id: 2, label: '[BLOCKER]', title: 'Deployment pipeline frozen', tag: 'ci-cd-scripts' },
        { id: 3, label: '[BUG]', title: 'Auth flow broken on mobile', tag: 'ci-cd-scripts' },
    ];

    const suggestedQueries = [
        "Who contributed the most this week?",
        "Show recent closed issues",
        "What's blocking our team?",
        "Top active repositories",
    ];

    const handleSend = async () => {
        if (!input.trim()) return;

        // Add user message
        const userMsg = { id: messages.length + 1, type: 'user', text: input };
        setMessages([...messages, userMsg]);
        setInput('');
        setLoading(true);

        // Simulate API call
        setTimeout(() => {
            const aiResponse = {
                id: messages.length + 2,
                type: 'ai',
                text: `Based on the GitHub data: ${input.toLowerCase().includes('who') ? 'alex-j leads with 145 commits this week, followed by sara-l with 128 commits.' : 'Found 12 relevant issues across your repositories. 75% are closed, 25% are still open. The average resolution time is 12 hours.'}`,
            };
            setMessages((prev) => [...prev, aiResponse]);
            setLoading(false);
        }, 1000);
    };

    return (
        <div className="fixed inset-0 w-screen h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 text-white overflow-hidden">
            {/* Animated background elements */}
            <div className="fixed inset-0 overflow-hidden pointer-events-none">
                <div className="absolute top-0 right-0 w-96 h-96 bg-purple-600/10 rounded-full blur-3xl animate-pulse"></div>
                <div className="absolute bottom-0 left-0 w-96 h-96 bg-cyan-600/10 rounded-full blur-3xl animate-pulse delay-1000"></div>
            </div>

            {/* Main container */}
            <div className="relative z-10 w-full h-full flex flex-col overflow-hidden">
                {/* Header */}
                <header className="border-b border-slate-700/50 backdrop-blur-md bg-slate-900/30 flex-shrink-0">
                    <div className="px-4 sm:px-6 py-4 flex items-center justify-between gap-4">
                        <div className="flex items-center gap-2 sm:gap-3">
                            <div className="w-8 h-8 sm:w-10 sm:h-10 bg-gradient-to-br from-cyan-400 to-blue-600 rounded-lg flex items-center justify-center font-bold text-sm">
                                D
                            </div>
                            <h1 className="text-lg sm:text-2xl font-bold">DevInsight</h1>
                        </div>

                        {/* Tabs */}
                        <div className="flex gap-1 bg-slate-800/50 p-1 rounded-lg">
                            {['chat', 'reports'].map((tab) => (
                                <button
                                    key={tab}
                                    onClick={() => setActiveTab(tab)}
                                    className={`px-3 sm:px-6 py-2 rounded-md font-medium transition-all duration-300 flex items-center gap-1 sm:gap-2 text-sm ${activeTab === tab
                                        ? 'bg-cyan-500/80 shadow-lg shadow-cyan-500/30'
                                        : 'hover:bg-slate-700/50'
                                        }`}
                                >
                                    {tab === 'chat' ? <MessageSquare size={16} /> : <BarChart3 size={16} />}
                                    <span className="hidden sm:inline">{tab.charAt(0).toUpperCase() + tab.slice(1)}</span>
                                </button>
                            ))}
                        </div>

                        {/* User avatar */}
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-gradient-to-br from-purple-400 to-pink-400 rounded-full flex items-center justify-center font-bold text-xs">
                            AI
                        </div>
                    </div>
                </header>

                {/* Content Area */}
                <div className="flex-1 overflow-hidden w-full min-h-0">
                    {activeTab === 'chat' ? (
                        /* Chat Tab */
                        <div className="h-full w-full flex flex-col p-4 sm:p-6 gap-4 max-w-6xl mx-auto">
                            <div className="flex-1 overflow-y-auto space-y-4 px-2 min-h-0">
                                {messages.length <= 1 && (
                                    <div className="h-full flex flex-col items-center justify-center gap-6 sm:gap-8 px-4">
                                        <div className="text-center">
                                            <h2 className="text-2xl sm:text-3xl font-bold mb-2">Welcome to DevInsight</h2>
                                            <p className="text-slate-400 text-base sm:text-lg">Ask questions about your GitHub activity</p>
                                        </div>

                                        <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 w-full max-w-2xl">
                                            {suggestedQueries.map((query, idx) => (
                                                <button
                                                    key={idx}
                                                    onClick={() => {
                                                        setInput(query);
                                                    }}
                                                    className="p-4 min-h-[60px] bg-slate-800/50 hover:bg-slate-700/50 active:bg-slate-700/70 border border-slate-700 rounded-lg text-left transition-all duration-200 hover:border-cyan-500 active:scale-98 group touch-manipulation"
                                                >
                                                    <p className="text-sm text-slate-300 group-hover:text-cyan-400 transition-colors">
                                                        {query}
                                                    </p>
                                                </button>
                                            ))}
                                        </div>
                                    </div>
                                )}

                                {messages.map((msg) => (
                                    <div
                                        key={msg.id}
                                        className={`flex ${msg.type === 'user' ? 'justify-end' : 'justify-start'} animate-fadeIn`}
                                    >
                                        <div
                                            className={`max-w-[85%] sm:max-w-md px-4 py-3 rounded-lg ${msg.type === 'user'
                                                ? 'bg-cyan-600/80 rounded-br-none'
                                                : 'bg-slate-800/80 border border-slate-700 rounded-bl-none'
                                                }`}
                                        >
                                            <p className="text-sm leading-relaxed break-words">{msg.text}</p>
                                        </div>
                                    </div>
                                ))}

                                {loading && (
                                    <div className="flex gap-2">
                                        <div className="bg-slate-800/80 border border-slate-700 rounded-lg rounded-bl-none px-4 py-3">
                                            <div className="flex gap-1">
                                                <div className="w-2 h-2 bg-cyan-400 rounded-full animate-bounce"></div>
                                                <div className="w-2 h-2 bg-cyan-400 rounded-full animate-bounce delay-100"></div>
                                                <div className="w-2 h-2 bg-cyan-400 rounded-full animate-bounce delay-200"></div>
                                            </div>
                                        </div>
                                    </div>
                                )}
                            </div>

                            {/* Input area */}
                            <div className="flex gap-2 flex-shrink-0">
                                <div className="flex-1 bg-slate-800/50 border border-slate-700 rounded-lg px-3 sm:px-4 py-2 sm:py-3 flex items-center gap-2 focus-within:border-cyan-500 transition-colors">
                                    <input
                                        type="text"
                                        value={input}
                                        onChange={(e) => setInput(e.target.value)}
                                        onKeyPress={(e) => e.key === 'Enter' && handleSend()}
                                        placeholder="Ask a question about GitHub..."
                                        className="flex-1 bg-transparent outline-none text-sm placeholder-slate-500"
                                    />
                                </div>
                                <button
                                    onClick={handleSend}
                                    disabled={!input.trim() || loading}
                                    className="bg-cyan-600 hover:bg-cyan-500 disabled:bg-slate-700 disabled:cursor-not-allowed px-3 sm:px-4 py-2 sm:py-3 rounded-lg transition-colors flex-shrink-0"
                                >
                                    <Send size={18} />
                                </button>
                            </div>
                        </div>
                    ) : (
                        /* Reports Tab */
                        <div className="h-full w-full overflow-y-auto p-4 sm:p-6 space-y-4 sm:space-y-6">
                            <div className="max-w-7xl mx-auto space-y-4 sm:space-y-6">
                                {/* Quick stats */}
                                <div className="grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4">
                                    <div className="bg-slate-800/50 border border-slate-700 rounded-lg p-4">
                                        <div className="text-slate-400 text-sm mb-2">Open vs Closed</div>
                                        <div className="text-3xl font-bold text-cyan-400">75%</div>
                                        <div className="text-xs text-slate-500 mt-1">Closed Issues</div>
                                    </div>
                                    <div className="bg-slate-800/50 border border-slate-700 rounded-lg p-4">
                                        <div className="text-slate-400 text-sm mb-2 flex items-center gap-2">
                                            <Clock size={16} /> Avg Resolution
                                        </div>
                                        <div className="text-3xl font-bold text-cyan-400">12h</div>
                                        <div className="text-xs text-slate-500 mt-1">from created to closed</div>
                                    </div>
                                    <div className="bg-slate-800/50 border border-slate-700 rounded-lg p-4">
                                        <div className="text-slate-400 text-sm mb-2 flex items-center gap-2">
                                            <TrendingUp size={16} /> Top Contributor
                                        </div>
                                        <div className="text-2xl font-bold text-cyan-400">alex-j</div>
                                        <div className="text-xs text-slate-500 mt-1">145 commits</div>
                                    </div>
                                </div>

                                {/* Charts row 1 */}
                                <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6">
                                    {/* Contributors Bar Chart */}
                                    <div className="bg-slate-800/50 border border-slate-700 rounded-lg p-4 sm:p-6">
                                        <h3 className="text-base sm:text-lg font-semibold mb-4">Top Contributors by Commits</h3>
                                        <ResponsiveContainer width="100%" height={250}>
                                            <BarChart data={contributorData} margin={{ top: 5, right: 10, left: -10, bottom: 5 }}>
                                                <CartesianGrid strokeDasharray="3 3" stroke="#334155" />
                                                <XAxis dataKey="name" stroke="#94A3B8" fontSize={12} />
                                                <YAxis stroke="#94A3B8" fontSize={12} />
                                                <Tooltip
                                                    contentStyle={{
                                                        backgroundColor: '#1e293b',
                                                        border: '1px solid #475569',
                                                        borderRadius: '8px',
                                                        fontSize: '12px'
                                                    }}
                                                />
                                                <Bar dataKey="commits" fill="#06B6D4" radius={[8, 8, 0, 0]} />
                                            </BarChart>
                                        </ResponsiveContainer>
                                    </div>

                                    {/* Issues Pie Chart */}
                                    <div className="bg-slate-800/50 border border-slate-700 rounded-lg p-4 sm:p-6">
                                        <h3 className="text-base sm:text-lg font-semibold mb-4">Open vs Closed Issues</h3>
                                        <ResponsiveContainer width="100%" height={250}>
                                            <PieChart>
                                                <Pie
                                                    data={issueStats}
                                                    cx="50%"
                                                    cy="50%"
                                                    innerRadius={50}
                                                    outerRadius={90}
                                                    paddingAngle={2}
                                                    dataKey="value"
                                                >
                                                    {issueStats.map((entry, index) => (
                                                        <Cell key={`cell-${index}`} fill={entry.fill} />
                                                    ))}
                                                </Pie>
                                                <Tooltip
                                                    contentStyle={{
                                                        backgroundColor: '#1e293b',
                                                        border: '1px solid #475569',
                                                        borderRadius: '8px',
                                                        fontSize: '12px'
                                                    }}
                                                />
                                                <Legend wrapperStyle={{ fontSize: '12px' }} />
                                            </PieChart>
                                        </ResponsiveContainer>
                                    </div>
                                </div>

                                {/* Charts row 2 */}
                                <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6">
                                    {/* Recent Active Issues */}
                                    <div className="bg-slate-800/50 border border-slate-700 rounded-lg p-4 sm:p-6">
                                        <h3 className="text-base sm:text-lg font-semibold mb-4">Recent Active Issues</h3>
                                        <div className="space-y-3">
                                            <div className="hidden sm:grid grid-cols-12 gap-2 text-xs text-slate-400 mb-3 pb-2 border-b border-slate-700">
                                                <div className="col-span-6">Title</div>
                                                <div className="col-span-3">State</div>
                                                <div className="col-span-3">Repository</div>
                                            </div>
                                            {recentIssues.map((issue) => (
                                                <div key={issue.id} className="sm:grid sm:grid-cols-12 gap-2 text-sm hover:bg-slate-700/30 p-2 rounded transition-colors flex flex-col sm:flex-row sm:items-center">
                                                    <div className="sm:col-span-6 text-slate-300 mb-1 sm:mb-0 font-medium sm:font-normal">{issue.title}</div>
                                                    <div className="sm:col-span-3 mb-1 sm:mb-0">
                                                        <span className={`px-2 py-1 rounded text-xs font-medium inline-block ${issue.state === 'OPEN' ? 'bg-yellow-500/20 text-yellow-400' : 'bg-green-500/20 text-green-400'
                                                            }`}>
                                                            {issue.state}
                                                        </span>
                                                    </div>
                                                    <div className="sm:col-span-3 text-slate-400 text-xs">{issue.repo}</div>
                                                </div>
                                            ))}
                                        </div>
                                    </div>

                                    {/* Unresolved Blockers */}
                                    <div className="bg-slate-800/50 border border-slate-700 rounded-lg p-4 sm:p-6">
                                        <h3 className="text-base sm:text-lg font-semibold mb-4 flex items-center gap-2">
                                            <AlertCircle size={18} className="text-red-400" />
                                            Unresolved Blockers
                                        </h3>
                                        <div className="space-y-3">
                                            {blockers.map((blocker) => (
                                                <div key={blocker.id} className="bg-slate-700/30 border-l-4 border-red-500 p-3 rounded hover:bg-slate-700/50 transition-colors cursor-pointer">
                                                    <div className="flex flex-wrap items-start gap-2 mb-2">
                                                        <span className="px-2 py-1 bg-red-500/20 text-red-400 text-xs font-bold rounded whitespace-nowrap">
                                                            {blocker.label}
                                                        </span>
                                                        <span className="text-slate-400 text-xs bg-slate-600/50 px-2 py-1 rounded">
                                                            {blocker.tag}
                                                        </span>
                                                    </div>
                                                    <p className="text-sm text-slate-200 break-words">{blocker.title}</p>
                                                </div>
                                            ))}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )}
                </div>
            </div>                <style>{`
        @keyframes fadeIn {
          from {
            opacity: 0;
            transform: translateY(10px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        .animate-fadeIn {
          animation: fadeIn 0.3s ease-out;
        }
        .delay-100 {
          animation-delay: 100ms;
        }
        .delay-200 {
          animation-delay: 200ms;
        }
        .delay-1000 {
          animation-delay: 1s;
        }
        .active\\:scale-98:active {
          transform: scale(0.98);
        }
        .touch-manipulation {
          touch-action: manipulation;
        }
        /* Prevent text selection on buttons for better mobile UX */
        button {
          -webkit-tap-highlight-color: transparent;
          user-select: none;
        }
        /* Better scrollbar styling */
        ::-webkit-scrollbar {
          width: 8px;
          height: 8px;
        }
        ::-webkit-scrollbar-track {
          background: transparent;
        }
        ::-webkit-scrollbar-thumb {
          background: #475569;
          border-radius: 4px;
        }
        ::-webkit-scrollbar-thumb:hover {
          background: #64748b;
        }
        /* Safe area insets for notched devices */
        @supports (padding: max(0px)) {
          body {
            padding-left: env(safe-area-inset-left);
            padding-right: env(safe-area-inset-right);
          }
        }
      `}</style>
        </div>
    );
};

export default DevInsight;
</file>

<file path="frontend/src/main.jsx">
import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './index.css'

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)
</file>

<file path="frontend/vite.config.js">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react(), tailwindcss()],
})
</file>

</files>
